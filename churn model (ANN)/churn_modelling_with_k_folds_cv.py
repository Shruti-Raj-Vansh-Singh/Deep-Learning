# -*- coding: utf-8 -*-
"""churn modelling with k folds  CV.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z99sQlKmgfF9eE-ob8HlGuTx8D0baVkm
"""

import pandas as pd
from google.colab import files
uploaded = files.upload()

import io
dataset = pd.read_csv(io.BytesIO(uploaded['Churn_Modelling.csv']))

dataset.head()

dataset.info()

X = dataset.drop(["RowNumber","CustomerId",'Surname','Exited'],axis=1,).values
Y = dataset['Exited'].values
print(X.shape)
X[:2,:]

from sklearn.preprocessing import LabelEncoder,OneHotEncoder
encoder1 = LabelEncoder()
X[:,1] = encoder1.fit_transform(X[:,1])
encoder2 = LabelEncoder()
X[:,2] = encoder2.fit_transform(X[:,2])

from sklearn.compose import ColumnTransformer
col_trans = ColumnTransformer([('one_hot_encoder',OneHotEncoder(categories='auto'),[2])], remainder = 'passthrough')
X = col_trans.fit_transform(X)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X = sc.fit_transform(X)

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.2, random_state=0)
X.shape

import tensorflow

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score

score = []
cv = KFold(n_splits = 10, shuffle=False, random_state=None)
for train_index,test_index in cv.split(X):
  classifier = Sequential()
  classifier.add(Dense(6, activation='relu', input_shape=(11,)))
  classifier.add(Dense(10, activation='relu'))
  classifier.add(Dense(1, activation='sigmoid'))
  classifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
  X_train,X_test = X[train_index], X[test_index]
  Y_train,Y_test = Y[train_index], Y[test_index]
  classifier.fit(X_train,Y_train, batch_size=4, epochs=100)
  acc = classifier.evaluate(X_test,Y_test)
  print(acc)

cross_val_score(classifier, X,Y,cv=10)

